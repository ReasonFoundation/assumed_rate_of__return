---
title: 'PDF extraction: Comparing extracted result with "Pension Summary and UA" & "OPEB Summary and UA"'
output: 
  html_document: 
    toc: true
    toc_float: true
---

```{r setup, include=FALSE, results = "asis"}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(dplyr)
library(stringr)
library(tidyr)
library(knitr)
```
### 1. General note

* Data extracted matches about 85% the Actuarial Assumed Rate of Investment Return in "Pension Summary and UA" report, and about 68% that of "OPEB Summary and UA" report. 

* However, some random manual checking (see below) shows that among the mismatched values with OPEB, the extracted values are the actual values found in the PDF files, while OPEB values are not. 


### 2. Data extracted 

- For better legibility, one more column is added - 'context' column. This column displays the line that contains the interested information, 2 lines before and 2 lines after that line.

*Note: These lines are from .txt files, which are converted from pdf files, and are not necessarily the lines as displayed in pfd files. The conversion sometimes destroys lines format.*

```{r}
extracted_full <- rio::import(here::here("data", "output1.csv")) %>% rename("name" = file)

extracted <- extracted_full %>% 
  pivot_longer(cols = 2:12,
               names_to = "search_terms", 
               values_to = "extracted_values") %>%
  mutate(name = str_sub(name, start = 11)) %>% 
  mutate(name = str_trim(name, side = "both")) %>% 
  mutate(extracted_values = str_remove_all(extracted_values, "\\['")) %>% 
  mutate(extracted_values = str_remove_all(extracted_values, "\\']")) %>% 
  mutate(extracted_values = str_remove_all(extracted_values, "%")) %>% 
  mutate(extracted_values = str_remove_all(extracted_values, " percent")) %>% 
  mutate(extracted_values = str_remove_all(extracted_values, regex("'.+"))) 


head(extracted)


```

### 3. Pension Summary and UA

```{r}
pension <- rio::import(here::here("data", "Michigan Pension and OPEB Assumption Data 2020.xlsx"), skip = 5, sheet = "Pension Summary and UA") %>% 
  rename("pension_rate" = `Actuarial Assumed Rate of Investment Return`,
         "name" = `Local Government Name`) %>%
  select(name, pension_rate) %>% 
  mutate(pension_rate = pension_rate * 100) %>% 
  mutate(name = str_replace_all(name, "City Of ", ""))

head(pension)
```

### 4. OPEB Summary and UA

```{r}
opeb<- rio::import(here::here("data", "Michigan Pension and OPEB Assumption Data 2020.xlsx"), skip = 5, sheet = "OPEB Summary and UA") %>% 
  rename("opeb_rate" = `Actuarial Assumed Rate of Investment Return`,
         "name" = `Local Government Name`) %>% 
  select(name, opeb_rate, `Discount Rate`) %>% 
  mutate(opeb_rate = opeb_rate * 100) %>% 
  mutate(name = str_replace_all(name, "City Of ", "")) %>% 
  rename("discount_rate_opeb" = `Discount Rate`) %>% 
  mutate(discount_rate_opeb = discount_rate_opeb * 100)

head(opeb)
```

### 5. Joining 3 data sets

- Join on common names
- Drop all rows that OPEB & Pension do not have corresponding values. Eg. Mcmillan Township

```{r}
d <- left_join(extracted, pension) %>% 
  left_join(opeb) %>%   
   mutate(extracted_values = as.numeric(extracted_values)) %>% 
  #select(-c(2,3)) %>% 
  drop_na(c(extracted_values, opeb_rate, pension_rate)) %>% 
  mutate(extracted_values = str_trim(extracted_values)) %>% 
  mutate(pension_rate = str_trim(pension_rate)) %>% 
  mutate(opeb_rate = str_trim(opeb_rate)) 
head(d)
```

**In the following comparisons: **

- if OPEB rate/ pension rate equals a value captured by a keyword, return 1, else 0

- for each city name, if the OPEB rate/pension rate is captured by any keywords, the average True/False point will be > 0. 

### 6. Comparison I: Data extracted vs. Pension & OPEB

Cases where no extracted values matches with either pension_rate, opbe_rate, or discount_rate_opeb
```{r}
d %>% 
  drop_na(extracted_values) %>% 
  mutate(equal_any = ifelse(extracted_values == pension_rate |
                            extracted_values == opeb_rate |
                            extracted_values == discount_rate_opeb, 1, 0)) %>% 
  group_by(name) %>% 
  mutate(average_anymatch = mean(equal_any, na.rm = TRUE)) %>% 
  mutate(got_atleast_1inall = ifelse(average_anymatch > 0, 1, 0)) %>% 
  filter(got_atleast_1inall == 0) %>% 
  select(name) %>% unique()
  select(c(name, extracted_values, pension_rate, opeb_rate, discount_rate_opeb, context
)) 

```

Manuall check: 
Ann Arbor: not found any value of 6.9 in pdf file

Madison Heights: GOT 6.75. can't get 6.50 percent, net of OPEB plan investments expense, including inflation

Marysville: not found any value of 7.00 in pdf file

Ingham County: solved. got 6.0 opeb plan

Hamtramck: OPEB plan actual number is 3.56%, the opeb report says 3.5%. lines broken down like this, 
can't get 7.35: 'significant effect on a planâ€™s required contribution and funding level. the investment rate', 'of return assumption was changed from 7.75% to 7.35%. the changed in assumed rate'


Crawford County: can't get 7.35, the number break into new line. No line contains both keywords and number

White Lake Charter Township: can't find 7.35 or 7 in pdf file. 

Fenton: can't find either 7.35 or 3.5 in pdf file

Wayne: new reg can get 3.5 percent net of opeb plan investment

Clinton Charter Township: 2 plans, GOT 7.25 percent net of pension plan investment. Can't find 7.35

Muskegon: GOT ['7.35 percent']

Redford Charter Township: Got 7.35

Southgate: 2 plans, got 7.25

### 6. Comparison II: Data extracted vs. Pension 

```{r}
d %>% 
  drop_na(extracted_values) %>% 
  mutate(equal_pension = ifelse(pension_rate == extracted_values, 1, 0)) %>% 
  group_by(name) %>% 
  mutate(average = mean(equal_pension, na.rm = TRUE)) %>% 
  mutate(got_atleast_1 = ifelse(average > 0, 1, 0)) %>% 
  select(-c(equal_pension, average, opeb_rate)) %>% 
  unique() -> extracted_vs_pension
```

- Got at least 1 matches with Pension

```{r}
extracted_vs_pension %>% 
  select(-context) %>% 
  filter(got_atleast_1 == 1)
```

- Did not capture a value that matches Pension

```{r}
extracted_vs_pension %>% 
  select(-context) %>% 
  drop_na(extracted_values) %>% 
  filter(got_atleast_1 == 0)
```


### 7. Comparison III: Data extracted vs. OPEB


```{r}
d %>% 
  drop_na(extracted_values) %>% 
  mutate(equal_opeb = ifelse(opeb_rate == extracted_values, 1, 0)) %>% 
  group_by(name) %>% 
  mutate(average = mean(equal_opeb, na.rm = TRUE)) %>% 
  mutate(got_atleast_1 = ifelse(average > 0, 1, 0)) %>% 
  select(-c(equal_opeb, average, pension_rate)) %>%
  unique() -> extracted_vs_opeb
```

- Got at least 1 matches with OPEB
```{r}
extracted_vs_opeb %>% 
  select(-context) %>% 
  filter(got_atleast_1 == 1) 

```

- Did not capture a value that matches OPEB

```{r}
extracted_vs_opeb %>% 
  select(-context) %>% 
  filter(got_atleast_1 == 0)
```

Some random checking against PDF files shows that these OPEB data points are not correct. 

```{r, function to check on cases}
display_context <- function(cityname) {
  df <- d %>% select(name, context, extracted_values, opeb_rate) %>% 
    filter(name == cityname) %>% slice(1:1)
  
  df$context <- kableExtra::cell_spec(
  df$context, 
  extra_css = "display: block; overflow: scroll; height: 5em; width: 20em;"
)
kableExtra::kable_styling(knitr::kable(df, escape = FALSE))
  
}
```

Eg1. "City of Lowell" has value of 7.35 (see "context" below), while reported value in OPEB is 0. 

```{r}
display_context("Lowell")

# To view all result for Lowell
extracted_vs_opeb %>% 
  filter(name == "Lowell")
```

Eg2. City of Bay City has value of 7.35, OPEB: 7.00

```{r}
display_context("Bay City")

```

Eg3. West Branch has value 7.35, OPEB: 4.25

```{r}

display_context("West Branch")
```

Eg4. Manistee has value of 7.60, OPEB: 0.00

```{r}

display_context("Manistee")
```

Eg5. Chelsea has value 7.6, OPEB: 7.4
```{r}
display_context("Chelsea")
# View all Chelsea

extracted %>% 
  filter(name == "Chelsea" & search_terms == "discount rate")
```


### 8. Note on OPEB vs Pension

In many cases, the rates in Pension tab and OPEB tab are not equal. For example: 
```{r}
d %>% 
  mutate(opeb_equal_pension = ifelse(pension_rate == opeb_rate, 1, 0)) %>% 
  filter(opeb_equal_pension == 0)
```


